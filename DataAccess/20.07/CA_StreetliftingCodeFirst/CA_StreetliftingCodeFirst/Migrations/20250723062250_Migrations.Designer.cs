// <auto-generated />
using System;
using CA_StreetliftingCodeFirst.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CA_StreetliftingCodeFirst.Migrations
{
    [DbContext(typeof(StreetliftingContext))]
    [Migration("20250723062250_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BenchPress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeadLift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HollowBodyHold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegRaise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverHeadPress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PullUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PushUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Row")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Squat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Measurament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BellyMeasure")
                        .HasColumnType("int");

                    b.Property<int>("ChestMeasure")
                        .HasColumnType("int");

                    b.Property<int>("NeckMeasure")
                        .HasColumnType("int");

                    b.Property<int>("QuadricepsMeasure")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Measuraments");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Routine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Core")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LowerBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pull")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Push")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpperBody")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.RoutineAndExercise", b =>
                {
                    b.Property<int>("RoutineId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.HasKey("RoutineId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("RoutineAndExercise");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Streetlifter1@Streetlifter",
                            NickName = "StreetLifterManiac1",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Streetlifter2@Streetlifter",
                            NickName = "StreetLifterManiac2",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Streetlifter3@Streetlifter",
                            NickName = "StreetLifterManiac3",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            Gender = "Male",
                            Name = "StreetLifter",
                            SurName = "Maniac1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            Gender = "Fmale",
                            Name = "StreetLifter",
                            SurName = "Maniac2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Age = 25,
                            Gender = "Male",
                            Name = "StreetLifter",
                            SurName = "Maniac3",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Measurament", b =>
                {
                    b.HasOne("CA_StreetliftingCodeFirst.Models.Entities.User", "AppUsers")
                        .WithMany("Measuraments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.RoutineAndExercise", b =>
                {
                    b.HasOne("CA_StreetliftingCodeFirst.Models.Entities.Exercise", "Exercise")
                        .WithMany("RoutinesExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CA_StreetliftingCodeFirst.Models.Entities.Routine", "Routine")
                        .WithMany("RoutinesExercises")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.UserDetail", b =>
                {
                    b.HasOne("CA_StreetliftingCodeFirst.Models.Entities.User", "AppUsers")
                        .WithOne("AppUserDetails")
                        .HasForeignKey("CA_StreetliftingCodeFirst.Models.Entities.UserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Exercise", b =>
                {
                    b.Navigation("RoutinesExercises");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.Routine", b =>
                {
                    b.Navigation("RoutinesExercises");
                });

            modelBuilder.Entity("CA_StreetliftingCodeFirst.Models.Entities.User", b =>
                {
                    b.Navigation("AppUserDetails")
                        .IsRequired();

                    b.Navigation("Measuraments");
                });
#pragma warning restore 612, 618
        }
    }
}
